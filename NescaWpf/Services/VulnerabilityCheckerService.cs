using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using NescaWpf.Models;

namespace NescaWpf.Services
{
    public class VulnerabilityCheckerService
    {
        private readonly List<VulnerabilitySignature> _signatures = new List<VulnerabilitySignature>
        {
            new VulnerabilitySignature { ServiceType = "HTTP", Pattern = @"HTTP/1\.[0-1].*200 OK", VulnerabilityName = "Дефолтный пароль", Ports = new[] { 80, 443, 8080 } },
            new VulnerabilitySignature { ServiceType = "HTTP", Pattern = @"Apache/2\.[0-2]\.", VulnerabilityName = "Устаревший Apache (до 2.2)", Ports = new[] { 80, 443, 8080 } },
            new VulnerabilitySignature { ServiceType = "HTTP", Pattern = @"login|auth|password", VulnerabilityName = "Страница авторизации", Ports = new[] { 80, 443, 8080 } },
            new VulnerabilitySignature { ServiceType = "FTP", Pattern = @"220.*vsFTPd 2\.3\.4", VulnerabilityName = "vsFTPd 2.3.4 Backdoor", Ports = new[] { 21, 2121 } },
            new VulnerabilitySignature { ServiceType = "FTP", Pattern = @"220.*anonymous", VulnerabilityName = "Анонимный FTP", Ports = new[] { 21, 2121 } },
            new VulnerabilitySignature { ServiceType = "SSH", Pattern = @"SSH-1\.", VulnerabilityName = "Устаревший SSH (v1)", Ports = new[] { 22 } }
        };

        public string CheckVulnerability(ScanResult result)
        {
            if (Regex.IsMatch(result.Banner, @"\[BA\]:admin:12345"))
            {
                return "Слабые учетные данные (admin:12345)";
            }

            var signatures = _signatures
                .Where(s => s.ServiceType == result.ServiceType && s.Ports.Contains(result.Port))
                .ToList();

            foreach (var sig in signatures)
            {
                if (Regex.IsMatch(result.Banner, sig.Pattern, RegexOptions.IgnoreCase))
                {
                    return sig.VulnerabilityName;
                }
            }

            return string.Empty;
        }
    }

    public class VulnerabilitySignature
    {
        public string ServiceType { get; set; }
        public string Pattern { get; set; }
        public string VulnerabilityName { get; set; }
        public int[] Ports { get; set; } = new int[0];
    }
}